*server_sim.py
	* No way to kill the program

* comm_rpi.py
	* calibrate command
		- True whenever obstacles detected in front (all three front sensors detect three obstacles aligned)
		- True after W_counter = 5, then reset counter

	* Receive movement command from RPi for manual control, and update the robot position accordingly

	* Front End have to synchronize with the back end (map explored, robot movement)

	* Send x and y coordinates of obstacles to RPi (for plotting the map on Android)

* Exploration.py
	* Test and fix bugs (if any)
	* Think of any edge cases

* FastestPath.py
	* Test and fix bugs (if any)
	* Think of any edge cases

* Simulator.py
	* Test and fix bugs (if any)

* custom.js
	* does not print exploration started or fastest path started